buildscript {
    repositories {
        mavenLocal()
        maven {
            url = "https://plugins.gradle.org/m2/"
        }
        maven {
            url = "https://artifacts.fizzpod.com/public/mvn/"
        }
    }
    dependencies {
        classpath ('com.fizzpod:gradle-plugin-opinion:23.0.2') {
            exclude group: 'com.fizzpod', module: 'gradle-layout-plugin'
        }
    }
    configurations.classpath {
        resolutionStrategy {
            force "org.jetbrains.kotlin:kotlin-compiler-embeddable:1.8.20"
        }
    }
}

plugins {
    id "org.jetbrains.kotlin.jvm" version "1.8.20"
}

apply plugin: 'com.fizzpod.pater-build'
apply from: 'buildSrc/build.gradle'

sourceSets {
    main {
        java {
            srcDir 'buildSrc/src/main/java'
        }
        resources {
            srcDir 'buildSrc/src/main/resources'
            exclude 'META-INF/gradle-plugins/com.fizzpod.layout.properties'
        }
        groovy {
            srcDir 'buildSrc/src/main/groovy'
        }
    }
    test {
        java {
            srcDir 'buildSrc/src/test/java'
        }
        resources {
            srcDir 'buildSrc/src/test/resources'
        }
        groovy {
            srcDir 'buildSrc/src/test/groovy'
        }
    }
}

dependencies {
    api gradleApi()
    api localGroovy()
}

gradlePlugin {

    plugins {
        plugin {
            description = 'Gradle plugin providing a configuration mechanism to create standardised layouts.'
            tags.set(['layout', 'template'])
            id = 'com.fizzpod.layout'
            displayName = 'Gradle Layout plugin'
            implementationClass = 'com.fizzpod.gradle.plugins.layout.LayoutPlugin'
        }
    }
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:1.8.20"
}

test {
    useJUnitPlatform()

    testLogging {
        events "started", "passed", "skipped", "failed"
    }
}